#!/bin/sh
while read oldrev newrev refname
do
	forbidden_pattern="ba"
	echo "Checking $oldrev..$newrev ($refname)"
  forbidden_files=`git log --no-color --name-only --pretty="format:" $oldrev..$newrev | env GREP_OPTIONS='' grep $forbidden_pattern`

  if [ -n "$forbidden_files" ]
  then
		echo Commit range contains the forbidden files, checking individual commits

		for commit in $(git rev-list $oldrev..$newrev)
		do
			this_commit=`git show --no-color --name-only --pretty="format:" $commit | env GREP_OPTIONS='' grep $forbidden_pattern`
	    if [ -n "$this_commit" ]
	    then
				echo Commit $commit
				echo $this_commit
	    fi
		done

		exit 1
  fi
done

# This gets the latest .gitignore (up to this commit) contents and saves it somewhere else.
# git show $newrev:.gitignore > /tmp/gitignored
# Won't work in bare repos :-/
# git ls-files -i --exclude-from=/tmp/gitignored
